import Head from 'next/head'
import css from './index.module.css'

import { useRouter } from 'next/router'
import Image from 'next/image'
import Hand from '@/public/twitter/Hand.png';
import Face from '@/public/twitter/face.png';
import { use } from 'react'
import NavBar from './component/NavBar'
import { useContext } from 'react';
import { TimerContext, convertTime } from '@/context/TimerContext';

import { ProgressContext } from '@/context/ProgressContext';

import Art00 from '@/public/fakeFileServer/Asset 1.png';
import Art01 from '@/public/fakeFileServer/Asset 2.png';
import Art02 from '@/public/fakeFileServer/Asset 3.png';
import Art03 from '@/public/fakeFileServer/Asset 4.png';
import Art04 from '@/public/fakeFileServer/Asset 5.png';
import Art05 from '@/public/fakeFileServer/Asset 6.png';
import Art06 from '@/public/fakeFileServer/Asset 7.png';
import Art07 from '@/public/fakeFileServer/Asset 8.png';
import Art08 from '@/public/fakeFileServer/Asset 9.png';
import Art09 from '@/public/fakeFileServer/Asset 10.png';
// const imageSrc = [
//   'https://drive.google.com/uc?id=1sbow1TD7X1_bKfWue7BhMiuFCC5XLlh3',
//   'https://drive.google.com/uc?id=1JFsu8n8_wHpQSnGz3KPIggTjIHOjvOgu',
//   'https://drive.google.com/uc?id=163GJORwNxy3GWVX7sEwnULAJNwX4PyuA',
//   'https://drive.google.com/uc?id=1efclxG_s_e0PX9pUAbBtEAIQLqfh0VSY',
//   'https://drive.google.com/uc?id=1i8d4in8IHfxNRiAiRtaqvUAHrieF37M-',
//   'https://drive.google.com/uc?id=1axMDqAY4wpZe5MoScz3m52p9sA8kTLH8',
//   'https://drive.google.com/uc?id=1LWBWdSGzutPe927qF4YorwdgrvBrj12T',
//   'https://drive.google.com/uc?id=1IFqvSr__o7zLJ3IRmlZLsQ_CVXJERo_I',
//   'https://drive.google.com/uc?id=17Ch1OLVh_NrwS-eOI8Kgt95arMG1hlss',
//   'https://drive.google.com/uc?id=18aakjB8VfZSXGm9PgrAxiZIlb5JmCVG3',
// ]
const imageSrc=[
  Art09,
  Art01,
  Art02,
  Art06,
  Art07,
  Art08,

  Art05,
  Art00,
  Art03,
  Art04,
]
export default function Twitter() {
  
  const { progressState, setProgressState } = useContext(ProgressContext);

  const router = useRouter();
  const { TimerState, setTimerState } = useContext(TimerContext);
  const { timeLimit } = TimerState;

  return (<>
    <Head>
        <title>blrow.world</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
    </Head>
    <main className={css.main}>
      <NavBar/>
      <div className={css.faceContainer} >
        <ZeFace zIndex={9} mixBlendMode={'screen'} opacity={'50%'}/>
        <ZeFace zIndex={2} mixBlendMode={'hard-light'} opacity={'20%'}/>
      </div>
      <div className={css.headingContainer}>
        <div className={css.titleContainer}>
          <div>
            THE EXHIBITION
          </div>
        </div>
        <div className={css.subTitleContainer}>
          <div>
            Artist #0000001
          </div>
          <div>
            begins in <span style={{color: 'greenyellow'}}>{convertTime(timeLimit)}</span>
          </div>
        </div>

      </div>

      <div
        className={css.paintingSetContainer}
      >
        <ZePlaceholder progressState={progressState} stage={0} art={0}/>
      </div>

      <div
        className={css.paintingSetContainer}
      >
        <ZePlaceholder progressState={progressState} stage={1} art={0}/>
        <ZePlaceholder progressState={progressState} stage={1} art={1}/>
      </div>

      <div
        className={css.paintingSetContainer}
      >
        <ZePlaceholder progressState={progressState} stage={2} art={0}/>
        <ZePlaceholder progressState={progressState} stage={2} art={1}/>
        <ZePlaceholder progressState={progressState} stage={2} art={2}/>
      </div>

      <div
        className={css.paintingSetContainer}
      >
        <ZePlaceholder progressState={progressState} stage={3} art={0}/>
        <ZePlaceholder progressState={progressState} stage={3} art={1}/>
        <ZePlaceholder progressState={progressState} stage={3} art={2}/>
        <ZePlaceholder progressState={progressState} stage={3} art={3}/>
      </div>
    </main>
  </>)
}

export async function getStaticProps(context) {

  return {
    props: {}, // will be passed to the page component as props
  }
}

function ZePlaceholder({progressState, stage, art}){

  let counter = 0;
  let value = stage;
  while ( value ) {
    counter = counter + value;
    value = value - 1;
  }
  counter = counter + art;

  return(
    <div
      className={css.paintingContainer + ' ' + css[`size${stage}`]}
      style={progressState[stage].paths.blue
        ? { 
          backgroundColor: 'rgb(128, 0, 128, 0)',
          filter: 'drop-shadow( 0vw 3vw 2vw black)'
        }
        : {}
    }
    >
      {progressState[stage].paths.blue
        ? <ZeArt src={imageSrc[counter]} alt={`${stage}-${art}`} /> 
        : <ZeHand/>
      }
    </div>
  )
}

function ZeArt({alt, src}){
  return( 
    <Image
      src = {src}
      alt = {alt}
      fill
      style={{
        objectFit: 'contain',
      }}
    />
  )
}

function ZeHand(){
  return( 
    <Image
    alt={'五指山'}
    src={Hand}
    style={{
      // objectFit: 'contain',
      // position: 'absolute',
      width: '100%',
      height: 'auto'
    }}
  />
  )
}

function ZeFace({zIndex, mixBlendMode, opacity}){
  return(
    <div
      style={{
        opacity: opacity,
        zIndex: zIndex,
        width: '100vw',
        mixBlendMode: mixBlendMode, //hard-light, screen
        position: 'fixed', //'absolute'
        right: '0',
        display: 'flex',
        flexDirection: 'row-reverse',
      }}
    >
      <Image
        alt={'mask'}
        src={Face}
        style={{
          width: '69%',
          height: 'auto',
          objectFit: 'contain'
        }}
      />
    </div>
  )
}